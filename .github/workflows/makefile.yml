name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: gerlero/apt-install@v1
      with:
          packages: meson libcairo2-dev pkg-config python3-dev
    - uses: actions/checkout@v4

    - name: build font
      run: make build

    - name: build tests
      run: make test

  create_release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs:
      - build-all
    runs-on: ubuntu-latest
    name: Create release
    outputs:
      url: ${{ steps.upload.outputs.browser_download_url }}
      config_file: ${{ steps.check_tag.outputs.config_file }}
      family: ${{ steps.check_tag.outputs.family }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip3 install 'git+https://github.com/googlefonts/gftools'
      - name: Download font zip
        uses: actions/download-artifact@v4
        with:
          name: fontbuild
          path: fonts
      - name: Install the latest version of uv
        uses: eifinger/setup-uv@v1
        with:
          enable-cache: true
      - name: Install Python deps
        run: |
          uv venv venv; . venv/bin/activate ; uv pip install -r requirements.txt
          touch venv/touchfile
      - name: Check for appropriate tag
        id: check_tag
        run: . venv/bin/activate; python3 scripts/check-tag.py ${{ github.ref_name }}
      - name: Set release body from tag
        run: |
          echo 'RELEASE_NOTES<<EOF' >> "$GITHUB_ENV"
          git show -s --format=%B ${{ github.ref_name }} | tail -n +4  >> "$GITHUB_ENV"
          echo 'EOF' >> "$GITHUB_ENV"
      - name: Create release
        id: release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ env.RELEASE_NOTES }}
      - name: Tell user about release
        run: |
          echo '::warning file=sources/config.yaml,title=A new release ${{ github.ref_name }} has been created'
          git show -s --format=%B ${{ github.ref_name }} | tail -n +4
          echo "$RELEASE_NOTES"
      - name: Find a DESCRIPTION.en_us.html
        run: cp documentation/${{ steps.check_tag.outputs.family}}.html fonts/DESCRIPTION.en_us.html
        continue-on-error: true
      - name: Find an ARTICLE.en_us.html
        run: cp documentation/${{ steps.check_tag.outputs.family}}.article.html fonts/ARTICLE.en_us.html
        continue-on-error: true
      - name: Create release bundle
        run: cd fonts; cp ../*.txt . ; zip -x requirements.txt -r ../${{ github.ref_name }}.zip ${{ steps.check_tag.outputs.family}}/ *.txt DESCRIPTION.en_us.html ARTICLE.en_us.html
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        id: upload
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.ref_name }}.zip
          asset_name: ${{ github.ref_name }}.zip
          tag: ${{ github.ref_name }}
          overwrite: true
          body: ${{ env.RELEASE_NOTES }}